/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  Signer,
  utils,
} from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export interface IGovernorCharlieEventsInterface extends utils.Interface {
  functions: {};

  events: {
    "CancelTransaction(bytes32,address,uint256,string,bytes,uint256)": EventFragment;
    "EmergencyVotingPeriodSet(uint256,uint256)": EventFragment;
    "ExecuteTransaction(bytes32,address,uint256,string,bytes,uint256)": EventFragment;
    "NewAdmin(address,address)": EventFragment;
    "NewDelay(uint256,uint256)": EventFragment;
    "NewEmergencyDelay(uint256,uint256)": EventFragment;
    "NewEmergencyQuorum(uint256,uint256)": EventFragment;
    "NewImplementation(address,address)": EventFragment;
    "NewPendingAdmin(address,address)": EventFragment;
    "NewQuorum(uint256,uint256)": EventFragment;
    "OptimisticQuorumVotesSet(uint256,uint256)": EventFragment;
    "OptimisticVotingDelaySet(uint256,uint256)": EventFragment;
    "ProposalCanceled(uint256)": EventFragment;
    "ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)": EventFragment;
    "ProposalExecuted(uint256)": EventFragment;
    "ProposalQueued(uint256,uint256)": EventFragment;
    "ProposalThresholdSet(uint256,uint256)": EventFragment;
    "QueueTransaction(bytes32,address,uint256,string,bytes,uint256)": EventFragment;
    "VoteCast(address,uint256,uint8,uint256,string)": EventFragment;
    "VotingDelaySet(uint256,uint256)": EventFragment;
    "VotingPeriodSet(uint256,uint256)": EventFragment;
    "WhitelistAccountExpirationSet(address,uint256)": EventFragment;
    "WhitelistGuardianSet(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "CancelTransaction"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "EmergencyVotingPeriodSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExecuteTransaction"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewAdmin"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewDelay"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewEmergencyDelay"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewEmergencyQuorum"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewImplementation"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewPendingAdmin"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewQuorum"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OptimisticQuorumVotesSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OptimisticVotingDelaySet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProposalCanceled"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProposalCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProposalExecuted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProposalQueued"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProposalThresholdSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "QueueTransaction"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "VoteCast"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "VotingDelaySet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "VotingPeriodSet"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "WhitelistAccountExpirationSet"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "WhitelistGuardianSet"): EventFragment;
}

export interface CancelTransactionEventObject {
  _txHash: string;
  _target: string;
  _value: BigNumber;
  _signature: string;
  _data: string;
  _eta: BigNumber;
}
export type CancelTransactionEvent = TypedEvent<
  [string, string, BigNumber, string, string, BigNumber],
  CancelTransactionEventObject
>;

export type CancelTransactionEventFilter =
  TypedEventFilter<CancelTransactionEvent>;

export interface EmergencyVotingPeriodSetEventObject {
  _oldEmergencyVotingPeriod: BigNumber;
  _emergencyVotingPeriod: BigNumber;
}
export type EmergencyVotingPeriodSetEvent = TypedEvent<
  [BigNumber, BigNumber],
  EmergencyVotingPeriodSetEventObject
>;

export type EmergencyVotingPeriodSetEventFilter =
  TypedEventFilter<EmergencyVotingPeriodSetEvent>;

export interface ExecuteTransactionEventObject {
  _txHash: string;
  _target: string;
  _value: BigNumber;
  _signature: string;
  _data: string;
  _eta: BigNumber;
}
export type ExecuteTransactionEvent = TypedEvent<
  [string, string, BigNumber, string, string, BigNumber],
  ExecuteTransactionEventObject
>;

export type ExecuteTransactionEventFilter =
  TypedEventFilter<ExecuteTransactionEvent>;

export interface NewAdminEventObject {
  _oldAdmin: string;
  _newAdmin: string;
}
export type NewAdminEvent = TypedEvent<[string, string], NewAdminEventObject>;

export type NewAdminEventFilter = TypedEventFilter<NewAdminEvent>;

export interface NewDelayEventObject {
  _oldTimelockDelay: BigNumber;
  _proposalTimelockDelay: BigNumber;
}
export type NewDelayEvent = TypedEvent<
  [BigNumber, BigNumber],
  NewDelayEventObject
>;

export type NewDelayEventFilter = TypedEventFilter<NewDelayEvent>;

export interface NewEmergencyDelayEventObject {
  _oldEmergencyTimelockDelay: BigNumber;
  _emergencyTimelockDelay: BigNumber;
}
export type NewEmergencyDelayEvent = TypedEvent<
  [BigNumber, BigNumber],
  NewEmergencyDelayEventObject
>;

export type NewEmergencyDelayEventFilter =
  TypedEventFilter<NewEmergencyDelayEvent>;

export interface NewEmergencyQuorumEventObject {
  _oldEmergencyQuorumVotes: BigNumber;
  _emergencyQuorumVotes: BigNumber;
}
export type NewEmergencyQuorumEvent = TypedEvent<
  [BigNumber, BigNumber],
  NewEmergencyQuorumEventObject
>;

export type NewEmergencyQuorumEventFilter =
  TypedEventFilter<NewEmergencyQuorumEvent>;

export interface NewImplementationEventObject {
  _oldImplementation: string;
  _newImplementation: string;
}
export type NewImplementationEvent = TypedEvent<
  [string, string],
  NewImplementationEventObject
>;

export type NewImplementationEventFilter =
  TypedEventFilter<NewImplementationEvent>;

export interface NewPendingAdminEventObject {
  _oldPendingAdmin: string;
  _newPendingAdmin: string;
}
export type NewPendingAdminEvent = TypedEvent<
  [string, string],
  NewPendingAdminEventObject
>;

export type NewPendingAdminEventFilter = TypedEventFilter<NewPendingAdminEvent>;

export interface NewQuorumEventObject {
  _oldQuorumVotes: BigNumber;
  _quorumVotes: BigNumber;
}
export type NewQuorumEvent = TypedEvent<
  [BigNumber, BigNumber],
  NewQuorumEventObject
>;

export type NewQuorumEventFilter = TypedEventFilter<NewQuorumEvent>;

export interface OptimisticQuorumVotesSetEventObject {
  _oldOptimisticQuorumVotes: BigNumber;
  _optimisticQuorumVotes: BigNumber;
}
export type OptimisticQuorumVotesSetEvent = TypedEvent<
  [BigNumber, BigNumber],
  OptimisticQuorumVotesSetEventObject
>;

export type OptimisticQuorumVotesSetEventFilter =
  TypedEventFilter<OptimisticQuorumVotesSetEvent>;

export interface OptimisticVotingDelaySetEventObject {
  _oldOptimisticVotingDelay: BigNumber;
  _optimisticVotingDelay: BigNumber;
}
export type OptimisticVotingDelaySetEvent = TypedEvent<
  [BigNumber, BigNumber],
  OptimisticVotingDelaySetEventObject
>;

export type OptimisticVotingDelaySetEventFilter =
  TypedEventFilter<OptimisticVotingDelaySetEvent>;

export interface ProposalCanceledEventObject {
  _id: BigNumber;
}
export type ProposalCanceledEvent = TypedEvent<
  [BigNumber],
  ProposalCanceledEventObject
>;

export type ProposalCanceledEventFilter =
  TypedEventFilter<ProposalCanceledEvent>;

export interface ProposalCreatedEventObject {
  _id: BigNumber;
  _proposer: string;
  _targets: string[];
  _values: BigNumber[];
  _signatures: string[];
  _calldatas: string[];
  _startBlock: BigNumber;
  _endBlock: BigNumber;
  _description: string;
}
export type ProposalCreatedEvent = TypedEvent<
  [
    BigNumber,
    string,
    string[],
    BigNumber[],
    string[],
    string[],
    BigNumber,
    BigNumber,
    string
  ],
  ProposalCreatedEventObject
>;

export type ProposalCreatedEventFilter = TypedEventFilter<ProposalCreatedEvent>;

export interface ProposalExecutedEventObject {
  _id: BigNumber;
}
export type ProposalExecutedEvent = TypedEvent<
  [BigNumber],
  ProposalExecutedEventObject
>;

export type ProposalExecutedEventFilter =
  TypedEventFilter<ProposalExecutedEvent>;

export interface ProposalQueuedEventObject {
  _id: BigNumber;
  _eta: BigNumber;
}
export type ProposalQueuedEvent = TypedEvent<
  [BigNumber, BigNumber],
  ProposalQueuedEventObject
>;

export type ProposalQueuedEventFilter = TypedEventFilter<ProposalQueuedEvent>;

export interface ProposalThresholdSetEventObject {
  _oldProposalThreshold: BigNumber;
  _newProposalThreshold: BigNumber;
}
export type ProposalThresholdSetEvent = TypedEvent<
  [BigNumber, BigNumber],
  ProposalThresholdSetEventObject
>;

export type ProposalThresholdSetEventFilter =
  TypedEventFilter<ProposalThresholdSetEvent>;

export interface QueueTransactionEventObject {
  _txHash: string;
  _target: string;
  _value: BigNumber;
  _signature: string;
  _data: string;
  _eta: BigNumber;
}
export type QueueTransactionEvent = TypedEvent<
  [string, string, BigNumber, string, string, BigNumber],
  QueueTransactionEventObject
>;

export type QueueTransactionEventFilter =
  TypedEventFilter<QueueTransactionEvent>;

export interface VoteCastEventObject {
  _voter: string;
  _proposalId: BigNumber;
  _support: number;
  _votes: BigNumber;
  _reason: string;
}
export type VoteCastEvent = TypedEvent<
  [string, BigNumber, number, BigNumber, string],
  VoteCastEventObject
>;

export type VoteCastEventFilter = TypedEventFilter<VoteCastEvent>;

export interface VotingDelaySetEventObject {
  _oldVotingDelay: BigNumber;
  _newVotingDelay: BigNumber;
}
export type VotingDelaySetEvent = TypedEvent<
  [BigNumber, BigNumber],
  VotingDelaySetEventObject
>;

export type VotingDelaySetEventFilter = TypedEventFilter<VotingDelaySetEvent>;

export interface VotingPeriodSetEventObject {
  _oldVotingPeriod: BigNumber;
  _newVotingPeriod: BigNumber;
}
export type VotingPeriodSetEvent = TypedEvent<
  [BigNumber, BigNumber],
  VotingPeriodSetEventObject
>;

export type VotingPeriodSetEventFilter = TypedEventFilter<VotingPeriodSetEvent>;

export interface WhitelistAccountExpirationSetEventObject {
  _account: string;
  _expiration: BigNumber;
}
export type WhitelistAccountExpirationSetEvent = TypedEvent<
  [string, BigNumber],
  WhitelistAccountExpirationSetEventObject
>;

export type WhitelistAccountExpirationSetEventFilter =
  TypedEventFilter<WhitelistAccountExpirationSetEvent>;

export interface WhitelistGuardianSetEventObject {
  _oldGuardian: string;
  _newGuardian: string;
}
export type WhitelistGuardianSetEvent = TypedEvent<
  [string, string],
  WhitelistGuardianSetEventObject
>;

export type WhitelistGuardianSetEventFilter =
  TypedEventFilter<WhitelistGuardianSetEvent>;

export interface IGovernorCharlieEvents extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IGovernorCharlieEventsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "CancelTransaction(bytes32,address,uint256,string,bytes,uint256)"(
      _txHash?: PromiseOrValue<BytesLike> | null,
      _target?: PromiseOrValue<string> | null,
      _value?: null,
      _signature?: null,
      _data?: null,
      _eta?: null
    ): CancelTransactionEventFilter;
    CancelTransaction(
      _txHash?: PromiseOrValue<BytesLike> | null,
      _target?: PromiseOrValue<string> | null,
      _value?: null,
      _signature?: null,
      _data?: null,
      _eta?: null
    ): CancelTransactionEventFilter;

    "EmergencyVotingPeriodSet(uint256,uint256)"(
      _oldEmergencyVotingPeriod?: null,
      _emergencyVotingPeriod?: null
    ): EmergencyVotingPeriodSetEventFilter;
    EmergencyVotingPeriodSet(
      _oldEmergencyVotingPeriod?: null,
      _emergencyVotingPeriod?: null
    ): EmergencyVotingPeriodSetEventFilter;

    "ExecuteTransaction(bytes32,address,uint256,string,bytes,uint256)"(
      _txHash?: PromiseOrValue<BytesLike> | null,
      _target?: PromiseOrValue<string> | null,
      _value?: null,
      _signature?: null,
      _data?: null,
      _eta?: null
    ): ExecuteTransactionEventFilter;
    ExecuteTransaction(
      _txHash?: PromiseOrValue<BytesLike> | null,
      _target?: PromiseOrValue<string> | null,
      _value?: null,
      _signature?: null,
      _data?: null,
      _eta?: null
    ): ExecuteTransactionEventFilter;

    "NewAdmin(address,address)"(
      _oldAdmin?: null,
      _newAdmin?: null
    ): NewAdminEventFilter;
    NewAdmin(_oldAdmin?: null, _newAdmin?: null): NewAdminEventFilter;

    "NewDelay(uint256,uint256)"(
      _oldTimelockDelay?: null,
      _proposalTimelockDelay?: null
    ): NewDelayEventFilter;
    NewDelay(
      _oldTimelockDelay?: null,
      _proposalTimelockDelay?: null
    ): NewDelayEventFilter;

    "NewEmergencyDelay(uint256,uint256)"(
      _oldEmergencyTimelockDelay?: null,
      _emergencyTimelockDelay?: null
    ): NewEmergencyDelayEventFilter;
    NewEmergencyDelay(
      _oldEmergencyTimelockDelay?: null,
      _emergencyTimelockDelay?: null
    ): NewEmergencyDelayEventFilter;

    "NewEmergencyQuorum(uint256,uint256)"(
      _oldEmergencyQuorumVotes?: null,
      _emergencyQuorumVotes?: null
    ): NewEmergencyQuorumEventFilter;
    NewEmergencyQuorum(
      _oldEmergencyQuorumVotes?: null,
      _emergencyQuorumVotes?: null
    ): NewEmergencyQuorumEventFilter;

    "NewImplementation(address,address)"(
      _oldImplementation?: null,
      _newImplementation?: null
    ): NewImplementationEventFilter;
    NewImplementation(
      _oldImplementation?: null,
      _newImplementation?: null
    ): NewImplementationEventFilter;

    "NewPendingAdmin(address,address)"(
      _oldPendingAdmin?: null,
      _newPendingAdmin?: null
    ): NewPendingAdminEventFilter;
    NewPendingAdmin(
      _oldPendingAdmin?: null,
      _newPendingAdmin?: null
    ): NewPendingAdminEventFilter;

    "NewQuorum(uint256,uint256)"(
      _oldQuorumVotes?: null,
      _quorumVotes?: null
    ): NewQuorumEventFilter;
    NewQuorum(
      _oldQuorumVotes?: null,
      _quorumVotes?: null
    ): NewQuorumEventFilter;

    "OptimisticQuorumVotesSet(uint256,uint256)"(
      _oldOptimisticQuorumVotes?: null,
      _optimisticQuorumVotes?: null
    ): OptimisticQuorumVotesSetEventFilter;
    OptimisticQuorumVotesSet(
      _oldOptimisticQuorumVotes?: null,
      _optimisticQuorumVotes?: null
    ): OptimisticQuorumVotesSetEventFilter;

    "OptimisticVotingDelaySet(uint256,uint256)"(
      _oldOptimisticVotingDelay?: null,
      _optimisticVotingDelay?: null
    ): OptimisticVotingDelaySetEventFilter;
    OptimisticVotingDelaySet(
      _oldOptimisticVotingDelay?: null,
      _optimisticVotingDelay?: null
    ): OptimisticVotingDelaySetEventFilter;

    "ProposalCanceled(uint256)"(
      _id?: PromiseOrValue<BigNumberish> | null
    ): ProposalCanceledEventFilter;
    ProposalCanceled(
      _id?: PromiseOrValue<BigNumberish> | null
    ): ProposalCanceledEventFilter;

    "ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)"(
      _id?: PromiseOrValue<BigNumberish> | null,
      _proposer?: PromiseOrValue<string> | null,
      _targets?: null,
      _values?: null,
      _signatures?: null,
      _calldatas?: null,
      _startBlock?: PromiseOrValue<BigNumberish> | null,
      _endBlock?: null,
      _description?: null
    ): ProposalCreatedEventFilter;
    ProposalCreated(
      _id?: PromiseOrValue<BigNumberish> | null,
      _proposer?: PromiseOrValue<string> | null,
      _targets?: null,
      _values?: null,
      _signatures?: null,
      _calldatas?: null,
      _startBlock?: PromiseOrValue<BigNumberish> | null,
      _endBlock?: null,
      _description?: null
    ): ProposalCreatedEventFilter;

    "ProposalExecuted(uint256)"(
      _id?: PromiseOrValue<BigNumberish> | null
    ): ProposalExecutedEventFilter;
    ProposalExecuted(
      _id?: PromiseOrValue<BigNumberish> | null
    ): ProposalExecutedEventFilter;

    "ProposalQueued(uint256,uint256)"(
      _id?: PromiseOrValue<BigNumberish> | null,
      _eta?: null
    ): ProposalQueuedEventFilter;
    ProposalQueued(
      _id?: PromiseOrValue<BigNumberish> | null,
      _eta?: null
    ): ProposalQueuedEventFilter;

    "ProposalThresholdSet(uint256,uint256)"(
      _oldProposalThreshold?: null,
      _newProposalThreshold?: null
    ): ProposalThresholdSetEventFilter;
    ProposalThresholdSet(
      _oldProposalThreshold?: null,
      _newProposalThreshold?: null
    ): ProposalThresholdSetEventFilter;

    "QueueTransaction(bytes32,address,uint256,string,bytes,uint256)"(
      _txHash?: PromiseOrValue<BytesLike> | null,
      _target?: PromiseOrValue<string> | null,
      _value?: null,
      _signature?: null,
      _data?: null,
      _eta?: null
    ): QueueTransactionEventFilter;
    QueueTransaction(
      _txHash?: PromiseOrValue<BytesLike> | null,
      _target?: PromiseOrValue<string> | null,
      _value?: null,
      _signature?: null,
      _data?: null,
      _eta?: null
    ): QueueTransactionEventFilter;

    "VoteCast(address,uint256,uint8,uint256,string)"(
      _voter?: PromiseOrValue<string> | null,
      _proposalId?: PromiseOrValue<BigNumberish> | null,
      _support?: null,
      _votes?: null,
      _reason?: null
    ): VoteCastEventFilter;
    VoteCast(
      _voter?: PromiseOrValue<string> | null,
      _proposalId?: PromiseOrValue<BigNumberish> | null,
      _support?: null,
      _votes?: null,
      _reason?: null
    ): VoteCastEventFilter;

    "VotingDelaySet(uint256,uint256)"(
      _oldVotingDelay?: null,
      _newVotingDelay?: null
    ): VotingDelaySetEventFilter;
    VotingDelaySet(
      _oldVotingDelay?: null,
      _newVotingDelay?: null
    ): VotingDelaySetEventFilter;

    "VotingPeriodSet(uint256,uint256)"(
      _oldVotingPeriod?: null,
      _newVotingPeriod?: null
    ): VotingPeriodSetEventFilter;
    VotingPeriodSet(
      _oldVotingPeriod?: null,
      _newVotingPeriod?: null
    ): VotingPeriodSetEventFilter;

    "WhitelistAccountExpirationSet(address,uint256)"(
      _account?: null,
      _expiration?: null
    ): WhitelistAccountExpirationSetEventFilter;
    WhitelistAccountExpirationSet(
      _account?: null,
      _expiration?: null
    ): WhitelistAccountExpirationSetEventFilter;

    "WhitelistGuardianSet(address,address)"(
      _oldGuardian?: null,
      _newGuardian?: null
    ): WhitelistGuardianSetEventFilter;
    WhitelistGuardianSet(
      _oldGuardian?: null,
      _newGuardian?: null
    ): WhitelistGuardianSetEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
