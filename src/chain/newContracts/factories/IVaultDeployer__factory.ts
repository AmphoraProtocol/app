/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { IVaultDeployer, IVaultDeployerInterface } from '../IVaultDeployer';

const _abi = [
  {
    inputs: [],
    name: 'VaultDeployer_OnlyVaultController',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VAULT_CONTROLLER',
    outputs: [
      {
        internalType: 'contract IVaultController',
        name: '_vaultController',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '_id',
        type: 'uint96',
      },
      {
        internalType: 'address',
        name: '_minter',
        type: 'address',
      },
    ],
    name: 'deployVault',
    outputs: [
      {
        internalType: 'contract IVault',
        name: '_vault',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

export class IVaultDeployer__factory {
  static readonly abi = _abi;
  static createInterface(): IVaultDeployerInterface {
    return new utils.Interface(_abi) as IVaultDeployerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IVaultDeployer {
    return new Contract(address, _abi, signerOrProvider) as IVaultDeployer;
  }
}
