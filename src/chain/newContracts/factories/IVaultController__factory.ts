/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { IVaultController, IVaultControllerInterface } from '../IVaultController';

const _abi = [
  {
    inputs: [],
    name: 'VaultController_CapReached',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VaultController_FeeTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VaultController_LTVIncompatible',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VaultController_LiquidateZeroTokens',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VaultController_NotValidVault',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VaultController_OnlyMinter',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VaultController_OnlyPauser',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VaultController_OracleNotRegistered',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VaultController_OverLiquidation',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VaultController_RepayTooMuch',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VaultController_TokenAddressDoesNotMatchLpAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VaultController_TokenAlreadyRegistered',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VaultController_TokenNotRegistered',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VaultController_VaultDoesNotExist',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VaultController_VaultInsolvent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VaultController_VaultSolvent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VaultController_WrongCollateralAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: '_vaultId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: '_vaultAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_borrowAmount',
        type: 'uint256',
      },
    ],
    name: 'BorrowUSDA',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract IAMPHClaimer',
        name: '_oldClaimerContract',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'contract IAMPHClaimer',
        name: '_newClaimerContract',
        type: 'address',
      },
    ],
    name: 'ChangedClaimerContract',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: '_oldFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_newFee',
        type: 'uint256',
      },
    ],
    name: 'ChangedCurveLpFee',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint64',
        name: '_epoch',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'uint192',
        name: '_amount',
        type: 'uint192',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_curveVal',
        type: 'uint256',
      },
    ],
    name: 'InterestEvent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: '_vaultId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: '_assetAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_usdaToRepurchase',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_tokensToLiquidate',
        type: 'uint256',
      },
    ],
    name: 'Liquidate',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint192',
        name: '_protocolFee',
        type: 'uint192',
      },
    ],
    name: 'NewProtocolFee',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_vaultAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_vaultId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: '_vaultOwner',
        type: 'address',
      },
    ],
    name: 'NewVault',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_curveMasterAddress',
        type: 'address',
      },
    ],
    name: 'RegisterCurveMaster',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_ltv',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: '_oracleAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_liquidationIncentive',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_cap',
        type: 'uint256',
      },
    ],
    name: 'RegisteredErc20',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: '_vaultId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: '_vaultAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_repayAmount',
        type: 'uint256',
      },
    ],
    name: 'RepayUSDA',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_ltv',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: '_oracleAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_liquidationIncentive',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_cap',
        type: 'uint256',
      },
    ],
    name: 'UpdateRegisteredErc20',
    type: 'event',
  },
  {
    inputs: [],
    name: 'VAULT_DEPLOYER',
    outputs: [
      {
        internalType: 'contract IVaultDeployer',
        name: '_vaultDeployer',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '_id',
        type: 'uint96',
      },
    ],
    name: 'amountToSolvency',
    outputs: [
      {
        internalType: 'uint256',
        name: '_amountToSolvency',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'booster',
    outputs: [
      {
        internalType: 'contract IBooster',
        name: '_booster',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '_id',
        type: 'uint96',
      },
      {
        internalType: 'uint192',
        name: '_amount',
        type: 'uint192',
      },
    ],
    name: 'borrowUSDA',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '_id',
        type: 'uint96',
      },
      {
        internalType: 'uint192',
        name: '_amount',
        type: 'uint192',
      },
      {
        internalType: 'address',
        name: '_target',
        type: 'address',
      },
    ],
    name: 'borrowUSDAto',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '_id',
        type: 'uint96',
      },
      {
        internalType: 'uint192',
        name: '_susdAmount',
        type: 'uint192',
      },
      {
        internalType: 'address',
        name: '_target',
        type: 'address',
      },
    ],
    name: 'borrowsUSDto',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'calculateInterest',
    outputs: [
      {
        internalType: 'uint256',
        name: '_interest',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IAMPHClaimer',
        name: '_newClaimerContract',
        type: 'address',
      },
    ],
    name: 'changeClaimerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newFee',
        type: 'uint256',
      },
    ],
    name: 'changeCurveLpFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint192',
        name: '_newProtocolFee',
        type: 'uint192',
      },
    ],
    name: 'changeProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '_id',
        type: 'uint96',
      },
    ],
    name: 'checkVault',
    outputs: [
      {
        internalType: 'bool',
        name: '_overCollateralized',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'claimerContract',
    outputs: [
      {
        internalType: 'contract IAMPHClaimer',
        name: '_claimerContract',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'curveLpRewardsFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '_fee',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'curveMaster',
    outputs: [
      {
        internalType: 'contract CurveMaster',
        name: '_curveMaster',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IVaultController',
        name: '_oldVaultController',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: '_tokenAddresses',
        type: 'address[]',
      },
      {
        internalType: 'contract IAMPHClaimer',
        name: '_claimerContract',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_curveLpRewardsFee',
        type: 'uint256',
      },
      {
        internalType: 'contract IVaultDeployer',
        name: '_vaultDeployer',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'interestFactor',
    outputs: [
      {
        internalType: 'uint192',
        name: '_interestFactor',
        type: 'uint192',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'lastInterestTime',
    outputs: [
      {
        internalType: 'uint64',
        name: '_lastInterestTime',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '_id',
        type: 'uint96',
      },
      {
        internalType: 'address',
        name: '_assetAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_tokenAmount',
        type: 'uint256',
      },
    ],
    name: 'liquidateVault',
    outputs: [
      {
        internalType: 'uint256',
        name: '_tokensToLiquidate',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mintVault',
    outputs: [
      {
        internalType: 'address',
        name: '_vaultAddress',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '_vaultID',
        type: 'uint96',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: '_increase',
        type: 'bool',
      },
    ],
    name: 'modifyTotalDeposited',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolFee',
    outputs: [
      {
        internalType: 'uint192',
        name: '_protocolFee',
        type: 'uint192',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_masterCurveAddress',
        type: 'address',
      },
    ],
    name: 'registerCurveMaster',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_ltv',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_oracleAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_liquidationIncentive',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_cap',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_poolId',
        type: 'uint256',
      },
    ],
    name: 'registerErc20',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_usdaAddress',
        type: 'address',
      },
    ],
    name: 'registerUSDA',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '_id',
        type: 'uint96',
      },
    ],
    name: 'repayAllUSDA',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '_id',
        type: 'uint96',
      },
      {
        internalType: 'uint192',
        name: '_amount',
        type: 'uint192',
      },
    ],
    name: 'repayUSDA',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
    ],
    name: 'tokenCap',
    outputs: [
      {
        internalType: 'uint256',
        name: '_cap',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
    ],
    name: 'tokenCollateralInfo',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'tokenId',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'ltv',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'cap',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'totalDeposited',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'liquidationIncentive',
            type: 'uint256',
          },
          {
            internalType: 'contract IOracleRelay',
            name: 'oracle',
            type: 'address',
          },
          {
            internalType: 'enum IVaultController.CollateralType',
            name: 'collateralType',
            type: 'uint8',
          },
          {
            internalType: 'contract IBaseRewardPool',
            name: 'crvRewardsContract',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'poolId',
            type: 'uint256',
          },
        ],
        internalType: 'struct IVaultController.CollateralInfo',
        name: '_collateralInfo',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
    ],
    name: 'tokenCollateralType',
    outputs: [
      {
        internalType: 'enum IVaultController.CollateralType',
        name: '_type',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
    ],
    name: 'tokenCrvRewardsContract',
    outputs: [
      {
        internalType: 'contract IBaseRewardPool',
        name: '_crvRewardsContract',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
    ],
    name: 'tokenId',
    outputs: [
      {
        internalType: 'uint256',
        name: '_tokenId',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
    ],
    name: 'tokenLTV',
    outputs: [
      {
        internalType: 'uint256',
        name: '_ltv',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
    ],
    name: 'tokenLiquidationIncentive',
    outputs: [
      {
        internalType: 'uint256',
        name: '_liquidationIncentive',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
    ],
    name: 'tokenPoolId',
    outputs: [
      {
        internalType: 'uint256',
        name: '_poolId',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
    ],
    name: 'tokenTotalDeposited',
    outputs: [
      {
        internalType: 'uint256',
        name: '_totalDeposited',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
    ],
    name: 'tokensOracle',
    outputs: [
      {
        internalType: 'contract IOracleRelay',
        name: '_oracle',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'tokensRegistered',
    outputs: [
      {
        internalType: 'uint256',
        name: '_tokensRegistered',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '_id',
        type: 'uint96',
      },
      {
        internalType: 'address',
        name: '_token',
        type: 'address',
      },
    ],
    name: 'tokensToLiquidate',
    outputs: [
      {
        internalType: 'uint256',
        name: '_tokensToLiquidate',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalBaseLiability',
    outputs: [
      {
        internalType: 'uint192',
        name: '_totalBaseLiability',
        type: 'uint192',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unpause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_ltv',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_oracleAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_liquidationIncentive',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_cap',
        type: 'uint256',
      },
    ],
    name: 'updateRegisteredErc20',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '_id',
        type: 'uint96',
      },
    ],
    name: 'vaultAddress',
    outputs: [
      {
        internalType: 'address',
        name: '_vaultAddress',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '_id',
        type: 'uint96',
      },
    ],
    name: 'vaultBorrowingPower',
    outputs: [
      {
        internalType: 'uint192',
        name: '_vaultBorrowingPower',
        type: 'uint192',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_wallet',
        type: 'address',
      },
    ],
    name: 'vaultIDs',
    outputs: [
      {
        internalType: 'uint96[]',
        name: '_vaultIDs',
        type: 'uint96[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '_id',
        type: 'uint96',
      },
    ],
    name: 'vaultLiability',
    outputs: [
      {
        internalType: 'uint192',
        name: '_vaultLiability',
        type: 'uint192',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '_start',
        type: 'uint96',
      },
      {
        internalType: 'uint96',
        name: '_stop',
        type: 'uint96',
      },
    ],
    name: 'vaultSummaries',
    outputs: [
      {
        components: [
          {
            internalType: 'uint96',
            name: 'id',
            type: 'uint96',
          },
          {
            internalType: 'uint192',
            name: 'borrowingPower',
            type: 'uint192',
          },
          {
            internalType: 'uint192',
            name: 'vaultLiability',
            type: 'uint192',
          },
          {
            internalType: 'address[]',
            name: 'tokenAddresses',
            type: 'address[]',
          },
          {
            internalType: 'uint256[]',
            name: 'tokenBalances',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct IVaultController.VaultSummary[]',
        name: '_vaultSummaries',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vaultsMinted',
    outputs: [
      {
        internalType: 'uint96',
        name: '_vaultsMinted',
        type: 'uint96',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

export class IVaultController__factory {
  static readonly abi = _abi;
  static createInterface(): IVaultControllerInterface {
    return new utils.Interface(_abi) as IVaultControllerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IVaultController {
    return new Contract(address, _abi, signerOrProvider) as IVaultController;
  }
}
