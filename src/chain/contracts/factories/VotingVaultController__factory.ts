/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../common';
import type { VotingVaultController, VotingVaultControllerInterface } from '../VotingVaultController';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'voting_vault_address',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'vaultId',
        type: 'uint256',
      },
    ],
    name: 'NewVotingVault',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: '_CappedToken_underlying',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: '_underlying_CappedToken',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: '_vaultAddress_vaultId',
    outputs: [
      {
        internalType: 'uint96',
        name: '',
        type: 'uint96',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: '_vaultController',
    outputs: [
      {
        internalType: 'contract IVaultController',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '',
        type: 'uint96',
      },
    ],
    name: '_vaultId_votingVaultAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: '_votingVaultAddress_vaultId',
    outputs: [
      {
        internalType: 'uint96',
        name: '',
        type: 'uint96',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vaultController_',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: 'id',
        type: 'uint96',
      },
    ],
    name: 'mintVault',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'underlying_address',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'capped_token',
        type: 'address',
      },
    ],
    name: 'registerUnderlying',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'voting_vault',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'retrieveUnderlying',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'vault_address',
        type: 'address',
      },
    ],
    name: 'vaultId',
    outputs: [
      {
        internalType: 'uint96',
        name: '',
        type: 'uint96',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: 'vault_id',
        type: 'uint96',
      },
    ],
    name: 'votingVaultAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'voting_vault_address',
        type: 'address',
      },
    ],
    name: 'votingVaultId',
    outputs: [
      {
        internalType: 'uint96',
        name: '',
        type: 'uint96',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611440806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063a1a33b9d11610097578063c4d66de811610066578063c4d66de8146102c8578063eaa72b4a146102db578063f2fde38b14610304578063f98c53541461031757600080fd5b8063a1a33b9d14610247578063b1290dad14610279578063b78691821461028c578063c2109851146102b557600080fd5b8063715018a6116100d3578063715018a6146101e75780637726a73c146101f15780637810f1eb146102235780638da5cb5b1461023657600080fd5b80631a4b4c091461010557806328e5392b1461015457806337af77eb1461017d57806367e43aef146101be575b600080fd5b6101376101133660046109d0565b6001600160a01b03166000908152606860205260409020546001600160601b031690565b6040516001600160601b0390911681526020015b60405180910390f35b6101376101623660046109d0565b6066602052600090815260409020546001600160601b031681565b6101a661018b3660046109d0565b6069602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161014b565b6101a66101cc3660046109d0565b606a602052600090815260409020546001600160a01b031681565b6101ef61032a565b005b6101376101ff3660046109d0565b6001600160a01b03166000908152606660205260409020546001600160601b031690565b6101ef6102313660046109f4565b610369565b6033546001600160a01b03166101a6565b6101a6610255366004610a36565b6001600160601b03166000908152606760205260409020546001600160a01b031690565b6065546101a6906001600160a01b031681565b6101a661029a366004610a36565b6067602052600090815260409020546001600160a01b031681565b6101ef6102c3366004610a5f565b61047d565b6101ef6102d63660046109d0565b6104ef565b6101376102e93660046109d0565b6068602052600090815260409020546001600160601b031681565b6101ef6103123660046109d0565b61057f565b6101a6610325366004610a36565b61061a565b6033546001600160a01b0316331461035d5760405162461bcd60e51b815260040161035490610a98565b60405180910390fd5b6103676000610817565b565b6001600160a01b0382166103af5760405162461bcd60e51b815260206004820152600d60248201526c1a5b9d985b1a59081d985d5b1d609a1b6044820152606401610354565b336000908152606a60205260409020546001600160a01b0316806104095760405162461bcd60e51b815260206004820152601160248201527037b7363c9031b0b83832b2103a37b5b2b760791b6044820152606401610354565b6040516319e7634360e31b81526001600160a01b03828116600483015283811660248301526044820186905284919082169063cf3b1a1890606401600060405180830381600087803b15801561045e57600080fd5b505af1158015610472573d6000803e3d6000fd5b505050505050505050565b6033546001600160a01b031633146104a75760405162461bcd60e51b815260040161035490610a98565b6001600160a01b0391821660008181526069602090815260408083208054969095166001600160a01b03199687168117909555938252606a9052919091208054909216179055565b600054610100900460ff1680610508575060005460ff16155b6105245760405162461bcd60e51b815260040161035490610acd565b600054610100900460ff16158015610546576000805461ffff19166101011790555b61054e610869565b606580546001600160a01b0319166001600160a01b038416179055801561057b576000805461ff00191690555b5050565b6033546001600160a01b031633146105a95760405162461bcd60e51b815260040161035490610a98565b6001600160a01b03811661060e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610354565b61061781610817565b50565b6001600160601b0381166000908152606760205260408120546001600160a01b03166107f25760655460405163d912c42760e01b81526001600160601b03841660048201526000916001600160a01b03169063d912c4279060240160206040518083038186803b15801561068d57600080fd5b505afa1580156106a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c59190610b1b565b90506001600160a01b038116156107f057606554604051600091859184916001600160a01b03169030906106f8906109ae565b6001600160601b0390941684526001600160a01b0392831660208501529082166040840152166060820152608001604051809103906000f080158015610742573d6000803e3d6000fd5b506001600160601b038516600081815260676020908152604080832080546001600160a01b0319166001600160a01b0387811691821790925590881684526066835281842080546bffffffffffffffffffffffff1990811687179091558185526068845293829020805490941685179093558051928352908201929092529192507f982ffab806223ae71a0dfee49b2a54f959dced153a18f07b851f159860d52f67910160405180910390a1505b505b506001600160601b03166000908152606760205260409020546001600160a01b031690565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680610882575060005460ff16155b61089e5760405162461bcd60e51b815260040161035490610acd565b600054610100900460ff161580156108c0576000805461ffff19166101011790555b6108c86108e4565b6108d061094e565b8015610617576000805461ff001916905550565b600054610100900460ff16806108fd575060005460ff16155b6109195760405162461bcd60e51b815260040161035490610acd565b600054610100900460ff161580156108d0576000805461ffff19166101011790558015610617576000805461ff001916905550565b600054610100900460ff1680610967575060005460ff16155b6109835760405162461bcd60e51b815260040161035490610acd565b600054610100900460ff161580156109a5576000805461ffff19166101011790555b6108d033610817565b6108d280610b3983390190565b6001600160a01b038116811461061757600080fd5b6000602082840312156109e257600080fd5b81356109ed816109bb565b9392505050565b600080600060608486031215610a0957600080fd5b833592506020840135610a1b816109bb565b91506040840135610a2b816109bb565b809150509250925092565b600060208284031215610a4857600080fd5b81356001600160601b03811681146109ed57600080fd5b60008060408385031215610a7257600080fd5b8235610a7d816109bb565b91506020830135610a8d816109bb565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600060208284031215610b2d57600080fd5b81516109ed816109bb56fe608060405234801561001057600080fd5b506040516108d23803806108d283398101604081905261002f916100b8565b604080518082019091526001600160601b039094168085526001600160a01b0393841660209095018590526c01000000000000000000000000909402909317600055600280549183166001600160a01b03199283161790556001805493909216921691909117905561011a565b80516001600160a01b03811681146100b357600080fd5b919050565b600080600080608085870312156100ce57600080fd5b84516001600160601b03811681146100e557600080fd5b93506100f36020860161009c565b92506101016040860161009c565b915061010f6060860161009c565b905092959194509250565b6107a9806101296000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639b5043871161005b5780639b50438714610132578063af640d0f14610145578063cf3b1a1814610160578063dd3f95261461017357600080fd5b80630fe365361461008d5780632f10b47a146100be57806335369662146100d35780638e6719b11461011f575b600080fd5b600054600160601b90046001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100d16100cc36600461063b565b610186565b005b6000546100f8906001600160601b03811690600160601b90046001600160a01b031682565b604080516001600160601b0390931683526001600160a01b039091166020830152016100b5565b6001546100a1906001600160a01b031681565b6100d1610140366004610674565b6102c6565b6000546040516001600160601b0390911681526020016100b5565b6100d161016e366004610674565b610339565b6002546100a1906001600160a01b031681565b60008001600c9054906101000a90046001600160a01b03166001600160a01b031663075461726040518163ffffffff1660e01b815260040160206040518083038186803b1580156101d657600080fd5b505afa1580156101ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020e91906106b5565b6001600160a01b0316336001600160a01b0316146102675760405162461bcd60e51b815260206004820152601160248201527039b2b73232b9103737ba1036b4b73a32b960791b60448201526064015b60405180910390fd5b6040516317066a5760e21b81526001600160a01b038381166004830152821690635c19a95c90602401600060405180830381600087803b1580156102aa57600080fd5b505af11580156102be573d6000803e3d6000fd5b505050505050565b6002546001600160a01b0316336001600160a01b0316146103295760405162461bcd60e51b815260206004820152601a60248201527f73656e646572206e6f74205661756c74436f6e74726f6c6c6572000000000000604482015260640161025e565b61033483838361039c565b505050565b6001546001600160a01b0316336001600160a01b0316146103295760405162461bcd60e51b815260206004820181905260248201527f73656e646572206e6f7420566f74696e675661756c74436f6e74726f6c6c6572604482015260640161025e565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908401526103349286929160009161042c9185169084906104a9565b805190915015610334578080602001905181019061044a91906106d2565b6103345760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161025e565b60606104b884846000856104c2565b90505b9392505050565b6060824710156105235760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161025e565b843b6105715760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161025e565b600080866001600160a01b0316858760405161058d9190610724565b60006040518083038185875af1925050503d80600081146105ca576040519150601f19603f3d011682016040523d82523d6000602084013e6105cf565b606091505b50915091506105df8282866105ea565b979650505050505050565b606083156105f95750816104bb565b8251156106095782518084602001fd5b8160405162461bcd60e51b815260040161025e9190610740565b6001600160a01b038116811461063857600080fd5b50565b6000806040838503121561064e57600080fd5b823561065981610623565b9150602083013561066981610623565b809150509250929050565b60008060006060848603121561068957600080fd5b833561069481610623565b925060208401356106a481610623565b929592945050506040919091013590565b6000602082840312156106c757600080fd5b81516104bb81610623565b6000602082840312156106e457600080fd5b815180151581146104bb57600080fd5b60005b8381101561070f5781810151838201526020016106f7565b8381111561071e576000848401525b50505050565b600082516107368184602087016106f4565b9190910192915050565b602081526000825180602084015261075f8160408501602087016106f4565b601f01601f1916919091016040019291505056fea26469706673582212206d288645b16bb9739efbdb7b8d1830b36e295e7d8016fb03fb4208edb2f126dd64736f6c63430008090033a26469706673582212208cccd3090ca2eb8e9d387b9d082f85e8afbe3e204407afb1e0a25637093b0c7264736f6c63430008090033';

type VotingVaultControllerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: VotingVaultControllerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class VotingVaultController__factory extends ContractFactory {
  constructor(...args: VotingVaultControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<VotingVaultController> {
    return super.deploy(overrides || {}) as Promise<VotingVaultController>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VotingVaultController {
    return super.attach(address) as VotingVaultController;
  }
  override connect(signer: Signer): VotingVaultController__factory {
    return super.connect(signer) as VotingVaultController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingVaultControllerInterface {
    return new utils.Interface(_abi) as VotingVaultControllerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): VotingVaultController {
    return new Contract(address, _abi, signerOrProvider) as VotingVaultController;
  }
}
