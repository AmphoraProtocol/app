/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { ICurveMaster, ICurveMasterInterface } from '../ICurveMaster';

const _abi = [
  {
    inputs: [],
    name: 'CurveMaster_TokenNotEnabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CurveMaster_ZeroResult',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_curveAddress',
        type: 'address',
      },
    ],
    name: 'curves',
    outputs: [
      {
        internalType: 'address',
        name: '_curve',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_curveAddress',
        type: 'address',
      },
    ],
    name: 'forceSetCurve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
      {
        internalType: 'int256',
        name: '_xValue',
        type: 'int256',
      },
    ],
    name: 'getValueAt',
    outputs: [
      {
        internalType: 'int256',
        name: '_value',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tokenAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_curveAddress',
        type: 'address',
      },
    ],
    name: 'setCurve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_vaultMasterAddress',
        type: 'address',
      },
    ],
    name: 'setVaultController',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vaultControllerAddress',
    outputs: [
      {
        internalType: 'address',
        name: '_vaultController',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

export class ICurveMaster__factory {
  static readonly abi = _abi;
  static createInterface(): ICurveMasterInterface {
    return new utils.Interface(_abi) as ICurveMasterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ICurveMaster {
    return new Contract(address, _abi, signerOrProvider) as ICurveMaster;
  }
}
